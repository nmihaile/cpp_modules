/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.cpp                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: nmihaile <nmihaile@student.42heilbronn.    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/12/19 18:25:37 by nmihaile          #+#    #+#             */
/*   Updated: 2025/01/04 12:27:33 by nmihaile         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ScalarConverter.hpp"

int	main(int ac, char **av)
{
	if (ac == 2)
		ScalarConverter::convert(av[1]);

	// std::cout << "-----------" << std::endl;
	// ScalarConverter::convert("             1.0f");


	// ./convert $'\x00'
	// ./convert $'\x8F'

	// 2147483647
	// -2147483648

	// Float lowest / Float max
	// -340282346638528859811704183484516925440.0000000000000000 	->	MIN ACCEPTED INPUT -340282349999999999999999999999999999999.9999999999999999f
	// 340282346638528859811704183484516925440.0000000000000000 

	// Double lowest / Double max
	// -179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0000000000000000 
	// 179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0000000000000000 

	// Literall Types
	// singel character

	// num chars -> aka int
	// 123.123f / -inff / inff
	// -> float
	// 234.234 -> double
	//  -inf  inf
	//

	return (0);
}
